{"version":3,"file":"static/js/960.8f8c4809.chunk.js","mappings":"+QAEaA,EAAOC,EAAAA,GAAAA,KAAH,0DAKJC,EAAQD,EAAAA,GAAAA,MAAH,gGAMHE,EAAYF,EAAAA,GAAAA,MAAH,uNAUTG,EAAOH,EAAAA,GAAAA,EAAH,qE,2IChBNI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAyBjB,OACE,UAAC,KAAD,CAAMC,SAxBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGlCE,KAAKC,EAAAA,IACLD,MAAK,SAAAE,GACJC,EAAAA,GAAAA,QAAc,mCACf,IACAC,OAAM,SAAAC,GACkD,MAAnDA,EAA+BC,SAASC,OAC1CJ,EAAAA,GAAAA,MAAY,eAEZA,EAAAA,GAAAA,MAAYE,EAA+BG,QAE9C,IACHf,EAAKgB,OACN,EAG+BC,aAAa,MAA3C,WACE,UAAC,KAAD,oBAEE,SAAC,KAAD,CACEC,KAAK,QACLC,KAAK,QACLC,YAAY,oBACZC,UAAQ,QAGZ,UAAC,KAAD,uBAEE,SAAC,KAAD,CACEH,KAAK,WACLC,KAAK,WACLG,UAAW,EACXF,YAAY,8BACZC,UAAQ,QAGZ,SAAC,IAAD,CAAQH,KAAK,SAAb,qBACA,SAAC,KAAD,CAAMK,KAAK,uCAAX,oDAKL,EC1Dc,SAASC,IACtB,OACE,0BACE,SAAC9B,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n width: 320px;\n  margin: auto;\n `;\n \nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  ;` \n\n  export const InputName = styled.input`\n    border: 1px solid gray;\n    border-radius: 5px;\n    outline: none;\n    box-sizing: border-box;\n     height: 30px;\n    &:focus {\n        border: 5px solid  rgb(147, 243, 229);\n    }`\n\n  export const Link = styled.a`\n    display: block;\n    margin-top: 10px;\n  `  \n\n\n","import { useDispatch } from 'react-redux';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport { logIn } from 'redux/auth/operations';\nimport { Form, Label, InputName, Link } from './LoginForm.styled.jsx';\nimport { Button } from 'components/Button.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .then(unwrapResult)\n      .then(originalPromiseResult => {\n        toast.success('You have successfully logged in!');\n      })\n      .catch(rejectedValueOrSerializedError => {\n        if (rejectedValueOrSerializedError.response.status === 400) {\n          toast.error('Login error');\n        } else {\n          toast.error(rejectedValueOrSerializedError.message);\n        }\n      });\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Email\n        <InputName\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter your e-mail\"\n          required\n        />\n      </Label>\n      <Label>\n        Password\n        <InputName\n          type=\"password\"\n          name=\"password\"\n          minLength={5}\n          placeholder=\"Enter your current password\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Log in</Button>\n      <Link href=\"/goit-react-hw-08-phonebook/register\">\n        Don't have an account? Register now!\n      </Link>\n    </Form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","Label","InputName","Link","LoginForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","then","unwrapResult","originalPromiseResult","toast","catch","rejectedValueOrSerializedError","response","status","message","reset","autoComplete","type","name","placeholder","required","minLength","href","Login"],"sourceRoot":""}